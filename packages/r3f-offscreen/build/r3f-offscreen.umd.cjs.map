{"version":3,"file":"r3f-offscreen.umd.cjs","sources":["../src/events.ts","../src/Canvas.tsx","../src/render.ts"],"sourcesContent":["import { UseBoundStore } from \"zustand\";\nimport {\n   createEvents,\n   RootState,\n   EventManager,\n   Events,\n} from \"@react-three/fiber\";\nimport { Emitter } from \"mitt\";\n\nexport const EVENTS = {\n   onClick: [\"click\", false],\n   onContextMenu: [\"contextmenu\", false],\n   onDoubleClick: [\"dblclick\", false],\n   onWheel: [\"wheel\", true],\n   onPointerDown: [\"pointerdown\", true],\n   onPointerUp: [\"pointerup\", true],\n   onPointerLeave: [\"pointerleave\", true],\n   onPointerMove: [\"pointermove\", true],\n   onPointerCancel: [\"pointercancel\", true],\n   onLostPointerCapture: [\"lostpointercapture\", true],\n} as const;\n\nexport function createPointerEvents(emitter: Emitter<Record<any, unknown>>) {\n   return (\n      store: UseBoundStore<RootState | any>\n   ): EventManager<HTMLElement> => {\n      const { handlePointer } = createEvents(store);\n\n      return {\n         priority: 1,\n         enabled: true,\n         compute(event, state) {\n            // https://github.com/pmndrs/react-three-fiber/pull/782\n            // Events trigger outside of canvas when moved, use offsetX/Y by default and allow overrides\n            state.pointer.set(\n               (event.offsetX / state.size.width) * 2 - 1,\n               -(event.offsetY / state.size.height) * 2 + 1\n            );\n            state.raycaster.setFromCamera(state.pointer, state.camera);\n         },\n\n         connected: undefined,\n         handlers: Object.keys(EVENTS).reduce(\n            (acc, key) => ({ ...acc, [key]: handlePointer(key) }),\n            {}\n         ) as unknown as Events,\n         connect: (target) => {\n            const { set, events } = store.getState();\n            events.disconnect?.();\n            set((state: any) => ({\n               events: { ...state.events, connected: target },\n            }));\n            Object.entries(events?.handlers ?? []).forEach(([name, event]) => {\n               const [eventName] = EVENTS[name as keyof typeof EVENTS];\n               emitter.on(eventName as any, event as any);\n            });\n         },\n         disconnect: () => {\n            const { set, events } = store.getState();\n            if (events.connected) {\n               Object.entries(events.handlers ?? []).forEach(\n                  ([name, event]) => {\n                     const [eventName] = EVENTS[name as keyof typeof EVENTS];\n                     emitter.off(eventName as any, event as any);\n                  }\n               );\n               set((state: any) => ({\n                  events: { ...state.events, connected: undefined },\n               }));\n            }\n         },\n      };\n   };\n}\n","import React, { useEffect, useRef } from \"react\";\nimport type { Options as ResizeOptions } from \"react-use-measure\";\nimport { Canvas as CanvasImpl, RenderProps } from \"@react-three/fiber\";\nimport { EVENTS } from \"./events\";\n\nexport interface CanvasProps\n   extends Omit<RenderProps<HTMLCanvasElement>, \"size\">,\n      React.HTMLAttributes<HTMLDivElement> {\n   worker: Worker;\n   fallback?: React.ReactNode;\n   /**\n    * Options to pass to useMeasure.\n    * @see https://github.com/pmndrs/react-use-measure#api\n    */\n   resize?: ResizeOptions;\n   /** The target where events are being subscribed to, default: the div that wraps canvas */\n   eventSource?: HTMLElement | React.MutableRefObject<HTMLElement>;\n   /** The event prefix that is cast into canvas pointer x/y events, default: \"offset\" */\n   eventPrefix?: \"offset\" | \"client\" | \"page\" | \"layer\" | \"screen\";\n}\n\nfunction isRefObject<T>(ref: any): ref is React.MutableRefObject<T> {\n   return ref && ref.current !== undefined;\n}\n\nexport function Canvas({\n   eventSource,\n   worker,\n   fallback,\n   style,\n   className,\n   id,\n   ...props\n}: CanvasProps) {\n   const [shouldFallback, setFallback] = React.useState(false);\n   const canvasRef = useRef<HTMLCanvasElement>(null!);\n   const hasTransferredToOffscreen = useRef(false);\n\n   useEffect(() => {\n      if (!worker) return;\n\n      const canvas = canvasRef.current;\n      try {\n         if (!hasTransferredToOffscreen.current) {\n            const offscreen = canvasRef.current.transferControlToOffscreen();\n            hasTransferredToOffscreen.current = true;\n            worker.postMessage(\n               {\n                  type: \"init\",\n                  payload: {\n                     props,\n                     drawingSurface: offscreen,\n                     width: canvas.clientWidth,\n                     height: canvas.clientHeight,\n                     top: canvas.offsetTop,\n                     left: canvas.offsetLeft,\n                     pixelRatio: window.devicePixelRatio,\n                  },\n               },\n               [offscreen]\n            );\n         }\n      } catch (e) {\n         // Browser doesn't support offscreen canvas at all\n         setFallback(true);\n         return;\n      }\n\n      worker.onmessage = (e) => {\n         if (e.data.type === \"error\") {\n            // Worker failed to initialize\n            setFallback(true);\n         }\n      };\n\n      const currentEventSource = isRefObject(eventSource)\n         ? eventSource.current\n         : eventSource || canvas;\n\n      Object.values(EVENTS).forEach(([eventName, passive]) => {\n         currentEventSource.addEventListener(\n            eventName,\n            (event: any) => {\n               // Prevent default for all passive events\n               if (!passive) event.preventDefault();\n               // Capture pointer automatically on pointer down\n               if (eventName === \"pointerdown\") {\n                  event.target.setPointerCapture(event.pointerId);\n               } else if (eventName === \"pointerup\") {\n                  event.target.releasePointerCapture(event.pointerId);\n               }\n\n               worker.postMessage({\n                  type: \"dom_events\",\n                  payload: {\n                     eventName,\n                     deltaX: event.deltaX,\n                     deltaY: event.deltaY,\n                     pointerId: event.pointerId,\n                     pointerType: event.pointerType,\n                     button: event.button,\n                     buttons: event.buttons,\n                     altKey: event.altKey,\n                     ctrlKey: event.ctrlKey,\n                     metaKey: event.metaKey,\n                     shiftKey: event.shiftKey,\n                     movementX: event.movementX,\n                     movementY: event.movementY,\n                     clientX: event.clientX,\n                     clientY: event.clientY,\n                     offsetX: event.offsetX,\n                     offsetY: event.offsetY,\n                     pageX: event.pageX,\n                     pageY: event.pageY,\n                     x: event.x,\n                     y: event.y,\n                  },\n               });\n            },\n            { passive }\n         );\n      });\n\n      const handleResize = () => {\n         worker.postMessage({\n            type: \"resize\",\n            payload: {\n               width: currentEventSource.clientWidth,\n               height: currentEventSource.clientHeight,\n               top: currentEventSource.offsetTop,\n               left: currentEventSource.offsetLeft,\n            },\n         });\n      };\n\n      window.addEventListener(\"resize\", handleResize);\n      return () => {\n         window.removeEventListener(\"resize\", handleResize);\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, [worker]);\n\n   useEffect(() => {\n      if (!worker) return;\n      worker.postMessage({ type: \"props\", payload: props });\n   }, [worker, props]);\n\n   return shouldFallback ? (\n      <CanvasImpl id={id} className={className} style={style} {...props}>\n         {fallback}\n      </CanvasImpl>\n   ) : (\n      <canvas\n         id={id}\n         className={className}\n         style={{\n            position: \"relative\",\n            width: \"100%\",\n            height: \"100%\",\n            overflow: \"hidden\",\n            display: \"block\",\n            ...style,\n         }}\n         ref={canvasRef}\n      />\n   );\n}\n","import * as THREE from \"three\";\nimport mitt from \"mitt\";\nimport {\n   extend,\n   createRoot,\n   ReconcilerRoot,\n   Dpr,\n   Size,\n} from \"@react-three/fiber\";\nimport { DomEvent } from \"@react-three/fiber/dist/declarations/src/core/events\";\nimport { createPointerEvents } from \"./events\";\n\nexport function render(children: React.ReactNode) {\n   extend(THREE);\n\n   let root: ReconcilerRoot<HTMLCanvasElement>;\n   let dpr: Dpr = [1, 2];\n   let size: Size = {\n      width: 0,\n      height: 0,\n      top: 0,\n      left: 0,\n      updateStyle: false,\n   };\n   const emitter = mitt();\n\n   const handleInit = (payload: any) => {\n      const {\n         props,\n         drawingSurface: canvas,\n         width,\n         top,\n         left,\n         height,\n         pixelRatio,\n      } = payload;\n      try {\n         // Unmount root if already mounted\n         if (root) {\n            root.unmount();\n         }\n\n         // Shim the canvas into a fake window/document\n         Object.assign(canvas, {\n            pageXOffset: left,\n            pageYOffset: top,\n            clientLeft: left,\n            clientTop: top,\n            clientWidth: width,\n            clientHeight: height,\n            style: { touchAction: \"none\" },\n            ownerDocument: canvas,\n            documentElement: canvas,\n            getBoundingClientRect() {\n               return size;\n            },\n            setAttribute() {},\n            setPointerCapture() {},\n            releasePointerCapture() {},\n            addEventListener(event: string, callback: () => void) {\n               emitter.on(event, callback);\n            },\n            removeEventListener(event: string, callback: () => void) {\n               emitter.off(event, callback);\n            },\n         });\n         // Create react-three-fiber root\n         root = createRoot(canvas);\n         // Configure root\n         root.configure({\n            events: createPointerEvents(emitter),\n            size: (size = { width, height, top, left, updateStyle: false }),\n            dpr: (dpr = Math.min(Math.max(1, pixelRatio), 2)),\n            ...props,\n            onCreated: (state) => {\n               if (props.eventPrefix) {\n                  state.setEvents({\n                     compute: (event, state) => {\n                        const x = event[\n                           (props.eventPrefix + \"X\") as keyof DomEvent\n                        ] as number;\n                        const y = event[\n                           (props.eventPrefix + \"Y\") as keyof DomEvent\n                        ] as number;\n                        state.pointer.set(\n                           (x / state.size.width) * 2 - 1,\n                           -(y / state.size.height) * 2 + 1\n                        );\n                        state.raycaster.setFromCamera(\n                           state.pointer,\n                           state.camera\n                        );\n                     },\n                  });\n               }\n            },\n         });\n\n         // Render children once\n         root.render(children);\n      } catch (e: any) {\n         postMessage({ type: \"error\", payload: e?.message });\n      }\n\n      // Shim window to the canvas from here on\n      self.window = canvas;\n   };\n\n   const handleResize = ({ width, height, top, left }: Size) => {\n      if (!root) return;\n      root.configure({\n         size: (size = { width, height, top, left, updateStyle: false }),\n         dpr,\n      });\n   };\n\n   const handleEvents = (payload: any) => {\n      emitter.emit(payload.eventName, {\n         ...payload,\n         preventDefault() {},\n         stopPropagation() {},\n      });\n   };\n\n   const handleProps = (payload: any) => {\n      if (!root) return;\n      if (payload.dpr) dpr = payload.dpr;\n      root.configure({ size, dpr, ...payload });\n   };\n\n   const handlerMap = {\n      resize: handleResize,\n      init: handleInit,\n      dom_events: handleEvents,\n      props: handleProps,\n   };\n\n   self.onmessage = (event) => {\n      const { type, payload } = event.data;\n      const handler = handlerMap[type as keyof typeof handlerMap];\n      if (handler) handler(payload);\n   };\n\n   // Shims for threejs\n   // @ts-ignore\n   THREE.ImageLoader.prototype.load = function (\n      url: string,\n      onLoad: (img: ImageBitmap) => void,\n      onProgress: () => void,\n      onError: (e: Error) => void\n   ) {\n      if (this.path !== undefined) url = this.path + url;\n      url = this.manager.resolveURL(url);\n      const scope = this;\n      const cached = THREE.Cache.get(url);\n\n      if (cached !== undefined) {\n         scope.manager.itemStart(url);\n         if (onLoad) onLoad(cached);\n         scope.manager.itemEnd(url);\n         return cached;\n      }\n\n      fetch(url)\n         .then((res) => res.blob())\n         .then((res) =>\n            createImageBitmap(res, {\n               premultiplyAlpha: \"none\",\n               colorSpaceConversion: \"none\",\n            })\n         )\n         .then((bitmap) => {\n            THREE.Cache.add(url, bitmap);\n            if (onLoad) onLoad(bitmap);\n            scope.manager.itemEnd(url);\n         })\n         .catch(onError);\n      return {};\n   };\n\n   // Shims for web offscreen canvas\n   // @ts-ignore\n   self.window = {};\n   // @ts-ignore\n   self.document = {};\n   // @ts-ignore\n   self.Image = class {\n      height = 1;\n      width = 1;\n      set onload(callback: any) {\n         callback(true);\n      }\n   };\n}\n"],"names":["EVENTS","createPointerEvents","emitter","store","handlePointer","createEvents","event","state","acc","key","target","set","events","_a","name","eventName","isRefObject","ref","Canvas","eventSource","worker","fallback","style","className","id","props","shouldFallback","setFallback","React","canvasRef","useRef","hasTransferredToOffscreen","useEffect","canvas","offscreen","e","currentEventSource","passive","handleResize","CanvasImpl","jsx","render","children","extend","THREE","root","dpr","size","mitt","handlerMap","width","height","top","left","payload","pixelRatio","callback","createRoot","x","y","type","handler","url","onLoad","onProgress","onError","scope","cached","res","bitmap"],"mappings":"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"}